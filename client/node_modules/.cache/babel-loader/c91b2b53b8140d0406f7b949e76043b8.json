{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ImageBase =\n/** @class */\nfunction () {\n  function ImageBase() {}\n\n  ImageBase.prototype.scaleDown = function (opts) {\n    var width = this.getWidth();\n    var height = this.getHeight();\n    var ratio = 1;\n\n    if (opts.maxDimension > 0) {\n      var maxSide = Math.max(width, height);\n      if (maxSide > opts.maxDimension) ratio = opts.maxDimension / maxSide;\n    } else {\n      ratio = 1 / opts.quality;\n    }\n\n    if (ratio < 1) this.resize(width * ratio, height * ratio, ratio);\n  };\n\n  ImageBase.prototype.applyFilter = function (filter) {\n    var imageData = this.getImageData();\n\n    if (typeof filter === 'function') {\n      var pixels = imageData.data;\n      var n = pixels.length / 4;\n      var offset = void 0,\n          r = void 0,\n          g = void 0,\n          b = void 0,\n          a = void 0;\n\n      for (var i = 0; i < n; i++) {\n        offset = i * 4;\n        r = pixels[offset + 0];\n        g = pixels[offset + 1];\n        b = pixels[offset + 2];\n        a = pixels[offset + 3]; // Mark ignored color\n\n        if (!filter(r, g, b, a)) pixels[offset + 3] = 0;\n      }\n    }\n\n    return Promise.resolve(imageData);\n  };\n\n  return ImageBase;\n}();\n\nexports.ImageBase = ImageBase;","map":null,"metadata":{},"sourceType":"script"}