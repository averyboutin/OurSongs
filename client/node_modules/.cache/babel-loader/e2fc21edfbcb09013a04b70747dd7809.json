{"ast":null,"code":"var _jsxFileName = \"/Users/averyboutin/Repos/OurSongs/client/src/components/posts/posts.jsx\";\nimport React, { Component } from \"react\";\nimport Post from \"./post\";\nimport \"./posts.scss\";\nimport NewPost from \"./newPost\";\n\nclass Posts extends Component {\n  constructor() {\n    super();\n\n    this.refreshPosts = () => {\n      fetch(\"/api/posts/page/\".concat(this.state.numPosts, \"/\").concat(this.state.pageNumber)).then(res => res.json()).then(posts => this.setState({\n        posts\n      }, () => console.log(\"\".concat(this.state.numPosts, \" posts fetched on page \").concat(this.state.pageNumber), posts)));\n    };\n\n    this.handlePreviousPage = () => {\n      if (this.state.pageNumber > 0) {\n        const previousPage = this.state.pageNumber - 1;\n        this.setState({\n          pageNumber: previousPage\n        }, () => {\n          this.refreshPosts();\n        });\n      }\n    };\n\n    this.handleNextPage = () => {\n      const nextPage = this.state.pageNumber + 1;\n      this.setState({\n        pageNumber: nextPage\n      }, () => {\n        this.refreshPosts();\n      });\n    };\n\n    this.state = {\n      posts: [],\n      numPosts: 5,\n      pageNumber: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      pageNumber: this.props.pageNumber\n    }, () => this.refreshPosts());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"posts-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Posts\"), this.props.isLoggedIn && React.createElement(NewPost, {\n      refresh: this.refreshPosts,\n      token: this.props.token,\n      UserID: this.props.UserID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"posts-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.posts.map(post => React.createElement(Post, {\n      key: post.PostID,\n      postID: post.PostID,\n      refresh: this.refreshPosts,\n      description: post.PostDescription,\n      song: post.PostSong,\n      UserID: post.UserID,\n      UserName: post.UserName,\n      numComments: post.numComments,\n      currentUserID: this.props.UserID,\n      token: this.props.token,\n      handleViewComments: this.props.handleViewComments,\n      isViewingComments: this.props.isViewingComments,\n      pageNumber: this.state.pageNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"pageNav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: this.state.pageNumber === 0 ? \"btn btn-secondary muted\" : \"btn btn-secondary\",\n      onClick: this.handlePreviousPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Previous Page\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"page \", this.state.pageNumber + 1), React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: this.handleNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Next Page\")));\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/averyboutin/Repos/OurSongs/client/src/components/posts/posts.jsx"],"names":["React","Component","Post","NewPost","Posts","constructor","refreshPosts","fetch","state","numPosts","pageNumber","then","res","json","posts","setState","console","log","handlePreviousPage","previousPage","handleNextPage","nextPage","componentDidMount","props","render","isLoggedIn","token","UserID","map","post","PostID","PostDescription","PostSong","UserName","numComments","handleViewComments","isViewingComments"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Post from \"./post\";\r\nimport \"./posts.scss\";\r\nimport NewPost from \"./newPost\";\r\n\r\nclass Posts extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      posts: [],\r\n      numPosts: 5,\r\n      pageNumber: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ pageNumber: this.props.pageNumber }, () =>\r\n      this.refreshPosts()\r\n    );\r\n  }\r\n\r\n  refreshPosts = () => {\r\n    fetch(`/api/posts/page/${this.state.numPosts}/${this.state.pageNumber}`)\r\n      .then(res => res.json())\r\n      .then(posts =>\r\n        this.setState({ posts }, () =>\r\n          console.log(\r\n            `${this.state.numPosts} posts fetched on page ${this.state.pageNumber}`,\r\n            posts\r\n          )\r\n        )\r\n      );\r\n  };\r\n\r\n  handlePreviousPage = () => {\r\n    if (this.state.pageNumber > 0) {\r\n      const previousPage = this.state.pageNumber - 1;\r\n      this.setState({ pageNumber: previousPage }, () => {\r\n        this.refreshPosts();\r\n      });\r\n    }\r\n  };\r\n\r\n  handleNextPage = () => {\r\n    const nextPage = this.state.pageNumber + 1;\r\n    this.setState({ pageNumber: nextPage }, () => {\r\n      this.refreshPosts();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"posts-section\">\r\n        <h1>Posts</h1>\r\n        {this.props.isLoggedIn && (\r\n          <NewPost\r\n            refresh={this.refreshPosts}\r\n            token={this.props.token}\r\n            UserID={this.props.UserID}\r\n          />\r\n        )}\r\n\r\n        <div className=\"posts-container\">\r\n          {this.state.posts.map(post => (\r\n            <Post\r\n              key={post.PostID}\r\n              postID={post.PostID}\r\n              refresh={this.refreshPosts}\r\n              description={post.PostDescription}\r\n              song={post.PostSong}\r\n              UserID={post.UserID}\r\n              UserName={post.UserName}\r\n              numComments={post.numComments}\r\n              currentUserID={this.props.UserID}\r\n              token={this.props.token}\r\n              handleViewComments={this.props.handleViewComments}\r\n              isViewingComments={this.props.isViewingComments}\r\n              pageNumber={this.state.pageNumber}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"pageNav\">\r\n          <button\r\n            className={\r\n              this.state.pageNumber === 0\r\n                ? \"btn btn-secondary muted\"\r\n                : \"btn btn-secondary\"\r\n            }\r\n            onClick={this.handlePreviousPage}\r\n          >\r\n            Previous Page\r\n          </button>\r\n\r\n          <h4>page {this.state.pageNumber + 1}</h4>\r\n\r\n          <button className=\"btn btn-secondary\" onClick={this.handleNextPage}>\r\n            Next Page\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}