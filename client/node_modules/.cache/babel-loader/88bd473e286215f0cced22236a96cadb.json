{"ast":null,"code":"var _jsxFileName = \"/Users/averyboutin/Repos/OurSongs/client/src/components/comments/comment.jsx\";\nimport React, { Component } from \"react\";\nimport \"./comment.scss\";\nimport moment from \"moment\";\nimport * as Vibrant from \"node-vibrant\";\n\nclass Comment extends Component {\n  constructor() {\n    super();\n\n    this.handleDelete = () => {\n      fetch(\"/api/comments/\".concat(this.props.CommentID), {\n        method: \"DELETE\"\n      }).then(() => {\n        this.props.refresh();\n      });\n    };\n\n    this.handleFameClick = () => {\n      this.setState({\n        displayWidget: !this.state.displayWidget\n      });\n    };\n\n    this.handleAddOrRemove = () => {\n      this.props.IsInPlaylist ? this.props.removeTrackFromPlaylist(this.props.CommentID, this.props.song) : this.props.addTrackToPlaylist(this.props.CommentID, this.props.song);\n    };\n\n    this.handleCommentClick = () => {\n      Vibrant.from(this.state.trackAlbumArtUrl).getPalette().then(palette => {\n        console.log(palette);\n        document.body.style.background = \"linear-gradient(-30deg, \".concat(palette.LightMuted.hex, \", #ffffff)\");\n      });\n    };\n\n    this.state = {\n      trackAlbumArtUrl: null,\n      trackTitle: null,\n      trackArtist: null,\n      trackAlbum: null,\n      displayWidget: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.spotify.com/v1/tracks/\".concat(this.props.song), {\n      headers: {\n        Authorization: \"Bearer \".concat(this.props.token)\n      }\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        trackAlbumArtUrl: result.album.images[1].url,\n        trackTitle: result.name,\n        trackArtist: result.artists[0].name,\n        trackAlbum: result.album.name\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        trackAlbumArtUrl: \"/unknownTrack.jpg\",\n        trackTitle: \"[unknown track]\",\n        trackArtist: \"[unkown artist]\",\n        trackAlbum: \"[unknown album]\"\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.handleCommentClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.IsInPlaylist ? \"comment is-in-playlist\" : \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"frame\",\n      onClick: this.handleFameClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.trackAlbumArtUrl,\n      alt: \"album art for \".concat(this.state.trackAlbum),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"username-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Posted by \", this.props.UserName), React.createElement(\"p\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, moment(this.props.CommentDate).format(\"MMM Do YY, h:mm a\"))), React.createElement(\"h2\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.props.description)), React.createElement(\"div\", {\n      className: \"meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.trackTitle), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.trackArtist, \" \\u2022 \", this.state.trackAlbum)), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.props.currentUserName === this.props.postUserName && this.props.isLoggedInWithSpotify && this.props.Playlist && React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-spotify\",\n      onClick: () => {\n        this.handleAddOrRemove();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Add or Remove From Playlist\"), this.props.UserName === this.props.currentUserName && React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"DELETE\"))))), this.state.displayWidget && React.createElement(\"iframe\", {\n      src: \"https://open.spotify.com/embed/track/\".concat(this.props.song),\n      title: this.props.song,\n      width: \"100%\",\n      height: \"80\",\n      frameBorder: \"0\",\n      allowtransparency: \"true\",\n      allow: \"encrypted-media\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Users/averyboutin/Repos/OurSongs/client/src/components/comments/comment.jsx"],"names":["React","Component","moment","Vibrant","Comment","constructor","handleDelete","fetch","props","CommentID","method","then","refresh","handleFameClick","setState","displayWidget","state","handleAddOrRemove","IsInPlaylist","removeTrackFromPlaylist","song","addTrackToPlaylist","handleCommentClick","from","trackAlbumArtUrl","getPalette","palette","console","log","document","body","style","background","LightMuted","hex","trackTitle","trackArtist","trackAlbum","componentDidMount","headers","Authorization","token","res","json","result","album","images","url","name","artists","catch","err","render","UserName","CommentDate","format","description","currentUserName","postUserName","isLoggedInWithSpotify","Playlist"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./comment.scss\";\r\nimport moment from \"moment\";\r\nimport * as Vibrant from \"node-vibrant\";\r\n\r\nclass Comment extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      trackAlbumArtUrl: null,\r\n      trackTitle: null,\r\n      trackArtist: null,\r\n      trackAlbum: null,\r\n      displayWidget: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://api.spotify.com/v1/tracks/${this.props.song}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${this.props.token}`\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          trackAlbumArtUrl: result.album.images[1].url,\r\n          trackTitle: result.name,\r\n          trackArtist: result.artists[0].name,\r\n          trackAlbum: result.album.name\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          trackAlbumArtUrl: \"/unknownTrack.jpg\",\r\n          trackTitle: \"[unknown track]\",\r\n          trackArtist: \"[unkown artist]\",\r\n          trackAlbum: \"[unknown album]\"\r\n        });\r\n      });\r\n  }\r\n\r\n  handleDelete = () => {\r\n    fetch(`/api/comments/${this.props.CommentID}`, {\r\n      method: \"DELETE\"\r\n    }).then(() => {\r\n      this.props.refresh();\r\n    });\r\n  };\r\n\r\n  handleFameClick = () => {\r\n    this.setState({ displayWidget: !this.state.displayWidget });\r\n  };\r\n\r\n  handleAddOrRemove = () => {\r\n    this.props.IsInPlaylist\r\n      ? this.props.removeTrackFromPlaylist(\r\n          this.props.CommentID,\r\n          this.props.song\r\n        )\r\n      : this.props.addTrackToPlaylist(this.props.CommentID, this.props.song);\r\n  };\r\n\r\n  handleCommentClick = () => {\r\n    Vibrant.from(this.state.trackAlbumArtUrl)\r\n      .getPalette()\r\n      .then(palette => {\r\n        console.log(palette);\r\n        document.body.style.background = `linear-gradient(-30deg, ${palette.LightMuted.hex}, #ffffff)`;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={this.handleCommentClick}>\r\n        <div\r\n          className={\r\n            this.props.IsInPlaylist ? \"comment is-in-playlist\" : \"comment\"\r\n          }\r\n        >\r\n          <div className=\"frame\" onClick={this.handleFameClick}>\r\n            <img\r\n              src={this.state.trackAlbumArtUrl}\r\n              alt={`album art for ${this.state.trackAlbum}`}\r\n            />\r\n          </div>\r\n          <div className=\"info\">\r\n            <div className=\"user-info\">\r\n              <div className=\"username-date\">\r\n                <p className=\"username\">Posted by {this.props.UserName}</p>\r\n                <p className=\"date\">\r\n                  {moment(this.props.CommentDate).format(\"MMM Do YY, h:mm a\")}\r\n                </p>\r\n              </div>\r\n              <h2 className=\"description\">{this.props.description}</h2>\r\n            </div>\r\n            <div className=\"meta\">\r\n              <div>\r\n                <h2>{this.state.trackTitle}</h2>\r\n                <h3>\r\n                  {this.state.trackArtist} • {this.state.trackAlbum}\r\n                </h3>\r\n              </div>\r\n              <div className=\"buttons\">\r\n                {this.props.currentUserName === this.props.postUserName &&\r\n                  this.props.isLoggedInWithSpotify &&\r\n                  this.props.Playlist && (\r\n                    <button\r\n                      className=\"btn btn-secondary btn-spotify\"\r\n                      onClick={() => {\r\n                        this.handleAddOrRemove();\r\n                      }}\r\n                    >\r\n                      Add or Remove From Playlist\r\n                    </button>\r\n                  )}\r\n                {this.props.UserName === this.props.currentUserName && (\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={this.handleDelete}\r\n                  >\r\n                    DELETE\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.state.displayWidget && (\r\n          <iframe\r\n            src={`https://open.spotify.com/embed/track/${this.props.song}`}\r\n            title={this.props.song}\r\n            width=\"100%\"\r\n            height=\"80\"\r\n            frameBorder=\"0\"\r\n            allowtransparency=\"true\"\r\n            allow=\"encrypted-media\"\r\n          ></iframe>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n"]},"metadata":{},"sourceType":"module"}