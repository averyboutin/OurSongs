{"ast":null,"code":"var _jsxFileName = \"/Users/averyboutin/Repos/OurSongs/client/src/components/posts/post.jsx\";\nimport React, { Component } from \"react\";\nimport \"./post.scss\";\nimport moment from \"moment\";\nimport * as Vibrant from \"node-vibrant\";\n\nclass Post extends Component {\n  constructor() {\n    super();\n\n    this.handleDelete = () => {\n      fetch(\"/api/posts/\".concat(this.props.postID), {\n        method: \"DELETE\"\n      }).then(() => {\n        this.props.refresh();\n      });\n    };\n\n    this.handleFameClick = () => {\n      this.setState({\n        displayWidget: !this.state.displayWidget\n      });\n    };\n\n    this.handlePostClick = () => {\n      Vibrant.from(this.state.trackAlbumArtUrl).getPalette().then(palette => {\n        document.body.style.background = \"linear-gradient(-30deg, \".concat(palette.LightMuted.hex, \", #ffffff)\");\n      });\n    };\n\n    this.state = {\n      trackAlbumArtUrl: null,\n      trackTitle: null,\n      trackArtist: null,\n      trackAlbum: null,\n      displayWidget: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.spotify.com/v1/tracks/\".concat(this.props.song), {\n      headers: {\n        Authorization: \"Bearer \".concat(this.props.token)\n      }\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        trackAlbumArtUrl: result.album.images[1].url,\n        trackTitle: result.name,\n        trackArtist: result.artists[0].name,\n        trackAlbum: result.album.name\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        trackAlbumArtUrl: \"/unknownTrack.jpg\",\n        trackTitle: \"[unknown track]\",\n        trackArtist: \"[unkown artist]\",\n        trackAlbum: \"[unknown album]\"\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.handlePostClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"frame\",\n      onClick: this.handleFameClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.trackAlbumArtUrl,\n      alt: \"album art for \".concat(this.state.trackAlbum),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"username-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Posted by \", this.props.UserName), React.createElement(\"p\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, moment(this.props.PostDate).format(\"MMM Do YY, h:mm a\"))), React.createElement(\"h2\", {\n      className: this.props.isViewingComments ? \"description bigger\" : \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.description)), React.createElement(\"div\", {\n      className: \"meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.trackTitle), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.trackArtist, \" \\u2022 \", this.state.trackAlbum))), (!this.props.isViewingComments || this.props.Playlist) && //so buttons doesn't render when in comments mode and there is not playlist button\n    React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, !this.props.isViewingComments && React.createElement(\"button\", {\n      className: \"btn btn-secondary\",\n      onClick: () => this.props.handleViewComments({\n        UserName: this.props.UserName,\n        PostID: this.props.postID,\n        PostSong: this.props.song,\n        PostDescription: this.props.description,\n        pageNumber: this.props.pageNumber,\n        PostDate: this.props.PostDate,\n        Playlist: this.props.Playlist\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"View Comments (\", this.props.numComments, \")\"), this.props.Playlist && React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-spotify\",\n      onClick: e => {\n        window.open(\"http://open.spotify.com/user/thelinmichael/playlist/\".concat(this.props.Playlist), \"_blank\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Open Spotify Playlist\"), this.props.UserName === this.props.currentUserName && !this.props.isViewingComments && React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"DELETE\")))), this.state.displayWidget && React.createElement(\"iframe\", {\n      src: \"https://open.spotify.com/embed/track/\".concat(this.props.song),\n      title: this.props.song,\n      width: \"100%\",\n      height: \"80\",\n      frameBorder: \"0\",\n      allowtransparency: \"true\",\n      allow: \"encrypted-media\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/averyboutin/Repos/OurSongs/client/src/components/posts/post.jsx"],"names":["React","Component","moment","Vibrant","Post","constructor","handleDelete","fetch","props","postID","method","then","refresh","handleFameClick","setState","displayWidget","state","handlePostClick","from","trackAlbumArtUrl","getPalette","palette","document","body","style","background","LightMuted","hex","trackTitle","trackArtist","trackAlbum","componentDidMount","song","headers","Authorization","token","res","json","result","album","images","url","name","artists","catch","err","console","log","render","UserName","PostDate","format","isViewingComments","description","Playlist","handleViewComments","PostID","PostSong","PostDescription","pageNumber","numComments","e","window","open","currentUserName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAqCdC,YArCc,GAqCC,MAAM;AACnBC,MAAAA,KAAK,sBAAe,KAAKC,KAAL,CAAWC,MAA1B,GAAoC;AACvCC,QAAAA,MAAM,EAAE;AAD+B,OAApC,CAAL,CAEGC,IAFH,CAEQ,MAAM;AACZ,aAAKH,KAAL,CAAWI,OAAX;AACD,OAJD;AAKD,KA3Ca;;AAAA,SA6CdC,eA7Cc,GA6CI,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAA7B,OAAd;AACD,KA/Ca;;AAAA,SAiDdE,eAjDc,GAiDI,MAAM;AACtBd,MAAAA,OAAO,CAACe,IAAR,CAAa,KAAKF,KAAL,CAAWG,gBAAxB,EACGC,UADH,GAEGT,IAFH,CAEQU,OAAO,IAAI;AACfC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,qCAA4DJ,OAAO,CAACK,UAAR,CAAmBC,GAA/E;AACD,OAJH;AAKD,KAvDa;;AAEZ,SAAKX,KAAL,GAAa;AACXG,MAAAA,gBAAgB,EAAE,IADP;AAEXS,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,WAAW,EAAE,IAHF;AAIXC,MAAAA,UAAU,EAAE,IAJD;AAKXf,MAAAA,aAAa,EAAE;AALJ,KAAb;AAOD;;AAEDgB,EAAAA,iBAAiB,GAAG;AAClBxB,IAAAA,KAAK,6CAAsC,KAAKC,KAAL,CAAWwB,IAAjD,GAAyD;AAC5DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAY,KAAK1B,KAAL,CAAW2B,KAAvB;AADN;AADmD,KAAzD,CAAL,CAKGxB,IALH,CAKQyB,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALf,EAMG1B,IANH,CAMQ2B,MAAM,IAAI;AACd,WAAKxB,QAAL,CAAc;AACZK,QAAAA,gBAAgB,EAAEmB,MAAM,CAACC,KAAP,CAAaC,MAAb,CAAoB,CAApB,EAAuBC,GAD7B;AAEZb,QAAAA,UAAU,EAAEU,MAAM,CAACI,IAFP;AAGZb,QAAAA,WAAW,EAAES,MAAM,CAACK,OAAP,CAAe,CAAf,EAAkBD,IAHnB;AAIZZ,QAAAA,UAAU,EAAEQ,MAAM,CAACC,KAAP,CAAaG;AAJb,OAAd;AAMD,KAbH,EAcGE,KAdH,CAcSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAK/B,QAAL,CAAc;AACZK,QAAAA,gBAAgB,EAAE,mBADN;AAEZS,QAAAA,UAAU,EAAE,iBAFA;AAGZC,QAAAA,WAAW,EAAE,iBAHD;AAIZC,QAAAA,UAAU,EAAE;AAJA,OAAd;AAMD,KAtBH;AAuBD;;AAsBDkB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,OAAO,EAAE,KAAK/B,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAE,KAAKJ,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWG,gBADlB;AAEE,MAAA,GAAG,0BAAmB,KAAKH,KAAL,CAAWc,UAA9B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmC,KAAKtB,KAAL,CAAWyC,QAA9C,CADF,EAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG/C,MAAM,CAAC,KAAKM,KAAL,CAAW0C,QAAZ,CAAN,CAA4BC,MAA5B,CAAmC,mBAAnC,CADH,CAFF,CADF,EAOE;AACE,MAAA,SAAS,EACP,KAAK3C,KAAL,CAAW4C,iBAAX,GACI,oBADJ,GAEI,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAK5C,KAAL,CAAW6C,WAPd,CAPF,CADF,EAkBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKrC,KAAL,CAAWY,UAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWa,WADd,cAC8B,KAAKb,KAAL,CAAWc,UADzC,CAFF,CADF,CAlBF,EA0BG,CAAC,CAAC,KAAKtB,KAAL,CAAW4C,iBAAZ,IAAiC,KAAK5C,KAAL,CAAW8C,QAA7C,KAA4D;AAC3D;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAK9C,KAAL,CAAW4C,iBAAZ,IACC;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,OAAO,EAAE,MACP,KAAK5C,KAAL,CAAW+C,kBAAX,CAA8B;AAC5BN,QAAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAWyC,QADO;AAE5BO,QAAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWC,MAFS;AAG5BgD,QAAAA,QAAQ,EAAE,KAAKjD,KAAL,CAAWwB,IAHO;AAI5B0B,QAAAA,eAAe,EAAE,KAAKlD,KAAL,CAAW6C,WAJA;AAK5BM,QAAAA,UAAU,EAAE,KAAKnD,KAAL,CAAWmD,UALK;AAM5BT,QAAAA,QAAQ,EAAE,KAAK1C,KAAL,CAAW0C,QANO;AAO5BI,QAAAA,QAAQ,EAAE,KAAK9C,KAAL,CAAW8C;AAPO,OAA9B,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAckB,KAAK9C,KAAL,CAAWoD,WAd7B,MAFJ,EAmBG,KAAKpD,KAAL,CAAW8C,QAAX,IACC;AACE,MAAA,SAAS,EAAC,+BADZ;AAEE,MAAA,OAAO,EAAEO,CAAC,IAAI;AACZC,QAAAA,MAAM,CAACC,IAAP,+DACyD,KAAKvD,KAAL,CAAW8C,QADpE,GAEE,QAFF;AAID,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BApBJ,EAgCG,KAAK9C,KAAL,CAAWyC,QAAX,KAAwB,KAAKzC,KAAL,CAAWwD,eAAnC,IACC,CAAC,KAAKxD,KAAL,CAAW4C,iBADb,IAEG;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,OAAO,EAAE,KAAK9C,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCN,CA3BJ,CAPF,CADF,EAgFG,KAAKU,KAAL,CAAWD,aAAX,IACC;AACE,MAAA,GAAG,iDAA0C,KAAKP,KAAL,CAAWwB,IAArD,CADL;AAEE,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWwB,IAFpB;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC,IAJT;AAKE,MAAA,WAAW,EAAC,GALd;AAME,MAAA,iBAAiB,EAAC,MANpB;AAOE,MAAA,KAAK,EAAC,iBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjFJ,CADF;AA8FD;;AAzJ0B;;AA4J7B,eAAe5B,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./post.scss\";\r\nimport moment from \"moment\";\r\nimport * as Vibrant from \"node-vibrant\";\r\n\r\nclass Post extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      trackAlbumArtUrl: null,\r\n      trackTitle: null,\r\n      trackArtist: null,\r\n      trackAlbum: null,\r\n      displayWidget: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://api.spotify.com/v1/tracks/${this.props.song}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${this.props.token}`\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          trackAlbumArtUrl: result.album.images[1].url,\r\n          trackTitle: result.name,\r\n          trackArtist: result.artists[0].name,\r\n          trackAlbum: result.album.name\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          trackAlbumArtUrl: \"/unknownTrack.jpg\",\r\n          trackTitle: \"[unknown track]\",\r\n          trackArtist: \"[unkown artist]\",\r\n          trackAlbum: \"[unknown album]\"\r\n        });\r\n      });\r\n  }\r\n\r\n  handleDelete = () => {\r\n    fetch(`/api/posts/${this.props.postID}`, {\r\n      method: \"DELETE\"\r\n    }).then(() => {\r\n      this.props.refresh();\r\n    });\r\n  };\r\n\r\n  handleFameClick = () => {\r\n    this.setState({ displayWidget: !this.state.displayWidget });\r\n  };\r\n\r\n  handlePostClick = () => {\r\n    Vibrant.from(this.state.trackAlbumArtUrl)\r\n      .getPalette()\r\n      .then(palette => {\r\n        document.body.style.background = `linear-gradient(-30deg, ${palette.LightMuted.hex}, #ffffff)`;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={this.handlePostClick}>\r\n        <div className=\"post\">\r\n          <div className=\"frame\" onClick={this.handleFameClick}>\r\n            <img\r\n              src={this.state.trackAlbumArtUrl}\r\n              alt={`album art for ${this.state.trackAlbum}`}\r\n            />\r\n          </div>\r\n          <div className=\"info\">\r\n            <div className=\"user-info\">\r\n              <div className=\"username-date\">\r\n                <p className=\"username\">Posted by {this.props.UserName}</p>\r\n                <p className=\"date\">\r\n                  {moment(this.props.PostDate).format(\"MMM Do YY, h:mm a\")}\r\n                </p>\r\n              </div>\r\n              <h2\r\n                className={\r\n                  this.props.isViewingComments\r\n                    ? \"description bigger\"\r\n                    : \"description\"\r\n                }\r\n              >\r\n                {this.props.description}\r\n              </h2>\r\n            </div>\r\n            <div className=\"meta\">\r\n              <div>\r\n                <h2>{this.state.trackTitle}</h2>\r\n                <h3>\r\n                  {this.state.trackArtist} • {this.state.trackAlbum}\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            {(!this.props.isViewingComments || this.props.Playlist) && ( //so buttons doesn't render when in comments mode and there is not playlist button\r\n              <div className=\"buttons\">\r\n                {!this.props.isViewingComments && (\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() =>\r\n                      this.props.handleViewComments({\r\n                        UserName: this.props.UserName,\r\n                        PostID: this.props.postID,\r\n                        PostSong: this.props.song,\r\n                        PostDescription: this.props.description,\r\n                        pageNumber: this.props.pageNumber,\r\n                        PostDate: this.props.PostDate,\r\n                        Playlist: this.props.Playlist\r\n                      })\r\n                    }\r\n                  >\r\n                    View Comments ({this.props.numComments})\r\n                  </button>\r\n                )}\r\n                {this.props.Playlist && (\r\n                  <button\r\n                    className=\"btn btn-secondary btn-spotify\"\r\n                    onClick={e => {\r\n                      window.open(\r\n                        `http://open.spotify.com/user/thelinmichael/playlist/${this.props.Playlist}`,\r\n                        \"_blank\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    Open Spotify Playlist\r\n                  </button>\r\n                )}\r\n                {this.props.UserName === this.props.currentUserName &&\r\n                  !this.props.isViewingComments && (\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={this.handleDelete}\r\n                    >\r\n                      DELETE\r\n                    </button>\r\n                  )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {this.state.displayWidget && (\r\n          <iframe\r\n            src={`https://open.spotify.com/embed/track/${this.props.song}`}\r\n            title={this.props.song}\r\n            width=\"100%\"\r\n            height=\"80\"\r\n            frameBorder=\"0\"\r\n            allowtransparency=\"true\"\r\n            allow=\"encrypted-media\"\r\n          ></iframe>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}