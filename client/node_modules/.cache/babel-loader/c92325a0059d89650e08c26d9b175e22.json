{"ast":null,"code":"var _jsxFileName = \"/Users/averyboutin/Repos/OurSongs/client/src/components/comments/comments.jsx\";\nimport React, { Component } from \"react\";\nimport Comment from \"./comment\";\nimport NewComment from \"./newComment\";\nimport \"./comments.scss\";\n\nclass Comments extends Component {\n  constructor() {\n    super();\n\n    this.refreshComments = () => {\n      fetch(\"/api/comments/\".concat(this.props.PostID)).then(res => res.json()).then(comments => this.setState({\n        comments\n      }, () => console.log(\"comments fetched\", comments)));\n    };\n\n    this.state = {\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshComments();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"comments-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Comments\"), this.props.isLoggedIn && React.createElement(NewComment, {\n      PostID: this.props.PostID,\n      refresh: this.refreshComments,\n      token: this.props.token,\n      UserID: this.props.UserID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"comments-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.comments.map(comment => React.createElement(Comment, {\n      key: comment.CommentID,\n      CommentID: comment.CommentID,\n      description: comment.CommentDescription,\n      song: comment.CommentSong,\n      UserID: comment.UserID,\n      UserName: comment.UserName,\n      currentUserID: this.props.UserID,\n      token: this.props.token,\n      refresh: this.refreshComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/averyboutin/Repos/OurSongs/client/src/components/comments/comments.jsx"],"names":["React","Component","Comment","NewComment","Comments","constructor","refreshComments","fetch","props","PostID","then","res","json","comments","setState","console","log","state","componentDidMount","render","isLoggedIn","token","UserID","map","comment","CommentID","CommentDescription","CommentSong","UserName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,iBAAP;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,eAXc,GAWI,MAAM;AACtBC,MAAAA,KAAK,yBAAkB,KAAKC,KAAL,CAAWC,MAA7B,EAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,QAAQ,IACZ,KAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd,EAA4B,MAC1BE,OAAO,CAACC,GAAR,qBAAgCH,QAAhC,CADF,CAHJ;AAOD,KAnBa;;AAEZ,SAAKI,KAAL,GAAa;AACXJ,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,eAAL;AACD;;AAYDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGG,KAAKX,KAAL,CAAWY,UAAX,IACC,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWC,MADrB;AAEE,MAAA,OAAO,EAAE,KAAKH,eAFhB;AAGE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWa,KAHpB;AAIE,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAYE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWJ,QAAX,CAAoBU,GAApB,CAAwBC,OAAO,IAC9B,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,SADf;AAEE,MAAA,SAAS,EAAED,OAAO,CAACC,SAFrB;AAGE,MAAA,WAAW,EAAED,OAAO,CAACE,kBAHvB;AAIE,MAAA,IAAI,EAAEF,OAAO,CAACG,WAJhB;AAKE,MAAA,MAAM,EAAEH,OAAO,CAACF,MALlB;AAME,MAAA,QAAQ,EAAEE,OAAO,CAACI,QANpB;AAOE,MAAA,aAAa,EAAE,KAAKpB,KAAL,CAAWc,MAP5B;AAQE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWa,KARpB;AASE,MAAA,OAAO,EAAE,KAAKf,eAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAZF,CADF;AA8BD;;AArD8B;;AAwDjC,eAAeF,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Comment from \"./comment\";\r\nimport NewComment from \"./newComment\";\r\nimport \"./comments.scss\";\r\n\r\nclass Comments extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      comments: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshComments();\r\n  }\r\n\r\n  refreshComments = () => {\r\n    fetch(`/api/comments/${this.props.PostID}`)\r\n      .then(res => res.json())\r\n      .then(comments =>\r\n        this.setState({ comments }, () =>\r\n          console.log(`comments fetched`, comments)\r\n        )\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"comments-section\">\r\n        <h1>Comments</h1>\r\n\r\n        {this.props.isLoggedIn && (\r\n          <NewComment\r\n            PostID={this.props.PostID}\r\n            refresh={this.refreshComments}\r\n            token={this.props.token}\r\n            UserID={this.props.UserID}\r\n          />\r\n        )}\r\n\r\n        <div className=\"comments-container\">\r\n          {this.state.comments.map(comment => (\r\n            <Comment\r\n              key={comment.CommentID}\r\n              CommentID={comment.CommentID}\r\n              description={comment.CommentDescription}\r\n              song={comment.CommentSong}\r\n              UserID={comment.UserID}\r\n              UserName={comment.UserName}\r\n              currentUserID={this.props.UserID}\r\n              token={this.props.token}\r\n              refresh={this.refreshComments}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}