{"ast":null,"code":"var _jsxFileName = \"/Users/averyboutin/Repos/OurSongs/client/src/components/users/login.jsx\";\nimport React, { Component } from \"react\";\nimport \"./login.scss\";\n\nclass LogIn extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.username === \"\" && this.state.password === \"\") {\n        this.setState({\n          badUserNameMessage: \"Must have a username\",\n          badPassWordMessage: \"Must have a password\"\n        });\n      } else if (this.state.username === \"\") {\n        this.setState({\n          badUserNameMessage: \"Must have a username\"\n        });\n      } else if (this.state.password === \"\") {\n        this.setState({\n          badPassWordMessage: \"Must have a password\"\n        });\n      } else {\n        fetch(\"/api/users/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            UserName: e.target[0].value,\n            Password: e.target[1].value\n          })\n        }).then(res => {\n          if (res.status === 200) return res.json();else {\n            this.setState({\n              badLogInMessage: \"Incorrect Login\"\n            });\n            return Promise.reject();\n          }\n        }).then(result => {\n          console.log(result);\n          this.props.handleLogIn(result[0].UserName);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.handleLogInWithSpotify = () => {\n      const client_id = \"018eb308e675406b98d2e64a6bc3072c\";\n      const scope = \"playlist-modify-public\";\n      const redirect_uri = \"https://oursongs.herokuapp.com/\";\n      const state = this.generateRandomString(16);\n      let url = \"https://accounts.spotify.com/authorize\";\n      url += \"?response_type=token\";\n      url += \"&client_id=\" + encodeURIComponent(client_id);\n      url += \"&scope=\" + encodeURIComponent(scope);\n      url += \"&redirect_uri=\" + encodeURIComponent(redirect_uri);\n      url += \"&state=\" + encodeURIComponent(state);\n      window.location = url;\n    };\n\n    this.state = {\n      badLogInMessage: \"\",\n      badUserNameMessage: \"\",\n      badPassWordMessage: \"\",\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  generateRandomString(length) {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"log-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"div\", {\n      className: \"log-in-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-green\",\n      onClick: this.handleLogInWithSpotify,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Log In With Spotify\")), React.createElement(\"div\", {\n      className: \"divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"OR\"), React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-text text-muted\",\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Enter Username\"), React.createElement(\"input\", {\n      value: this.state.username,\n      onChange: e => {\n        this.setState({\n          username: e.target.value,\n          badUserNameMessage: \"\",\n          badLogInMessage: \"\"\n        });\n      },\n      className: this.state.badUserNameMessage || this.state.badLogInMessage ? \"form-control is-invalid\" : \"form-control\",\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      id: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.badUserNameMessage)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-text text-muted\",\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Enter Password\"), React.createElement(\"input\", {\n      value: this.state.password,\n      onChange: e => {\n        this.setState({\n          password: e.target.value,\n          badPassWordMessage: \"\",\n          badLogInMessage: \"\"\n        });\n      },\n      className: this.state.badPassWordMessage || this.state.badLogInMessage ? \"form-control is-invalid\" : \"form-control\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      id: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.badPassWordMessage)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-text\",\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"(Users not logged in with spotify will not be able to create spotify playlists)\"), React.createElement(\"label\", {\n      className: \"form-text text-danger\",\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.badLogInMessage)), React.createElement(\"div\", {\n      className: \"postOrCancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.props.handleLogInClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"input\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default LogIn;","map":{"version":3,"sources":["/Users/averyboutin/Repos/OurSongs/client/src/components/users/login.jsx"],"names":["React","Component","LogIn","constructor","handleSubmit","e","preventDefault","state","username","password","setState","badUserNameMessage","badPassWordMessage","fetch","method","headers","body","JSON","stringify","UserName","target","value","Password","then","res","status","json","badLogInMessage","Promise","reject","result","console","log","props","handleLogIn","catch","err","handleLogInWithSpotify","client_id","scope","redirect_uri","generateRandomString","url","encodeURIComponent","window","location","length","text","possible","i","charAt","Math","floor","random","render","handleLogInClose"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./login.scss\";\r\n\r\nclass LogIn extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      badLogInMessage: \"\",\r\n      badUserNameMessage: \"\",\r\n      badPassWordMessage: \"\",\r\n      username: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.username === \"\" && this.state.password === \"\") {\r\n      this.setState({\r\n        badUserNameMessage: \"Must have a username\",\r\n        badPassWordMessage: \"Must have a password\"\r\n      });\r\n    } else if (this.state.username === \"\") {\r\n      this.setState({ badUserNameMessage: \"Must have a username\" });\r\n    } else if (this.state.password === \"\") {\r\n      this.setState({ badPassWordMessage: \"Must have a password\" });\r\n    } else {\r\n      fetch(\"/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          UserName: e.target[0].value,\r\n          Password: e.target[1].value\r\n        })\r\n      })\r\n        .then(res => {\r\n          if (res.status === 200) return res.json();\r\n          else {\r\n            this.setState({\r\n              badLogInMessage: \"Incorrect Login\"\r\n            });\r\n            return Promise.reject();\r\n          }\r\n        })\r\n        .then(result => {\r\n          console.log(result);\r\n          this.props.handleLogIn(result[0].UserName);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  generateRandomString(length) {\r\n    var text = \"\";\r\n    var possible =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  }\r\n\r\n  handleLogInWithSpotify = () => {\r\n    const client_id = \"018eb308e675406b98d2e64a6bc3072c\";\r\n    const scope = \"playlist-modify-public\";\r\n    const redirect_uri = \"https://oursongs.herokuapp.com/\";\r\n    const state = this.generateRandomString(16);\r\n\r\n    let url = \"https://accounts.spotify.com/authorize\";\r\n    url += \"?response_type=token\";\r\n    url += \"&client_id=\" + encodeURIComponent(client_id);\r\n    url += \"&scope=\" + encodeURIComponent(scope);\r\n    url += \"&redirect_uri=\" + encodeURIComponent(redirect_uri);\r\n    url += \"&state=\" + encodeURIComponent(state);\r\n    window.location = url;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"log-in\">\r\n        <h2>Log In</h2>\r\n        <div className=\"log-in-container\">\r\n          <div>\r\n            <button\r\n              className=\"btn btn-primary btn-green\"\r\n              onClick={this.handleLogInWithSpotify}\r\n            >\r\n              Log In With Spotify\r\n            </button>\r\n          </div>\r\n          <div className=\"divider\">\r\n            <div className=\"line\"></div>\r\n            <p>OR</p>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-text text-muted\" htmlFor=\"username\">\r\n                Enter Username\r\n              </label>\r\n              <input\r\n                value={this.state.username}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    username: e.target.value,\r\n                    badUserNameMessage: \"\",\r\n                    badLogInMessage: \"\"\r\n                  });\r\n                }}\r\n                className={\r\n                  this.state.badUserNameMessage || this.state.badLogInMessage\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Username\"\r\n                id=\"username\"\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                {this.state.badUserNameMessage}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-text text-muted\" htmlFor=\"password\">\r\n                Enter Password\r\n              </label>\r\n              <input\r\n                value={this.state.password}\r\n                onChange={e => {\r\n                  this.setState({\r\n                    password: e.target.value,\r\n                    badPassWordMessage: \"\",\r\n                    badLogInMessage: \"\"\r\n                  });\r\n                }}\r\n                className={\r\n                  this.state.badPassWordMessage || this.state.badLogInMessage\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                id=\"password\"\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                {this.state.badPassWordMessage}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-text\" htmlFor=\"username\">\r\n                (Users not logged in with spotify will not be able to create\r\n                spotify playlists)\r\n              </label>\r\n              <label className=\"form-text text-danger\" htmlFor=\"username\">\r\n                {this.state.badLogInMessage}\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"postOrCancel\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.props.handleLogInClose}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n"]},"metadata":{},"sourceType":"module"}